var searchIndex = JSON.parse('{\
"libb2b":{"doc":"A simple, but relatively extensible peer-to-peer chat …","i":[[0,"peer","libb2b","",null,null],[3,"Peer","libb2b::peer","",null,null],[12,"info","","",0,null],[12,"rx","","",0,null],[11,"new","","",0,[[["peercontrolmessage",4],["string",3],["unboundedreceiver",3]]]],[11,"start","","",0,[[]]],[3,"PeerInfo","","",null,null],[12,"name","","",1,null],[12,"addr","","",1,null],[3,"PeerData","","",null,null],[12,"city","","",2,null],[12,"lat","","",2,null],[12,"lng","","",2,null],[12,"peers","","",2,null],[11,"new","","",2,[[["f64",15],["vec",3],["string",3],["str",15]]]],[0,"connection","libb2b","",null,null],[6,"Frame","libb2b::connection","",null,null],[3,"Connection","","A <code>Connection</code> handles reading/writing to the network.",null,null],[12,"frames","","",3,null],[11,"new","","",3,[[["tcpstream",3]]]],[11,"read_frame","","Returns the next [Bing2BingFrame] from the wire.",3,[[]]],[11,"write_frame","","Writes a frame to the wire.",3,[[["bing2bingframe",4]]]],[0,"peer_map","libb2b","",null,null],[3,"PeerMap","libb2b::peer_map","A <code>PeerMap</code> contains data and functionality related to …",null,null],[12,"shared","","",4,null],[3,"Shared","","",null,null],[12,"state","","",5,null],[3,"State","","",null,null],[12,"entries","","",6,null],[11,"new","","",4,[[]]],[11,"contains_peer","","Does this <code>PeerMap</code> contain a peer with the given name?",4,[[["string",3]],["bool",15]]],[11,"peer_names","","Returns a list of the peers that are currently in this …",4,[[],[["vec",3],["string",3]]]],[11,"insert","","Insert a new peer",4,[[["unboundedsender",3],["string",3],["peercontrolmessage",4]],[["option",4],["unboundedsender",3]]]],[11,"remove","","Removes a peer from this <code>PeerMap</code>.",4,[[["string",3]],[["option",4],["unboundedsender",3]]]],[11,"broadcast","","Broadcasts a message to every one of our peers (out links)…",4,[[["bing2bingframe",4],["string",3]]]],[0,"server","libb2b","",null,null],[3,"Server","libb2b::server","The “server” side of the P2P chat application. A …",null,null],[12,"listener","","",7,null],[12,"sequence_numbers","","",7,null],[12,"name","","",7,null],[12,"ip_address","","",7,null],[12,"port","","",7,null],[12,"num_incoming_conns","","",7,null],[12,"client_tx","","",7,null],[12,"rx","","",7,null],[11,"new","","",7,[[["serverrxchannel",6],["clienttxchannel",6],["str",15]]]],[11,"listen","","Begin listening for inbound connections.",7,[[["clienttxchannel",6],["peermap",3]]]],[11,"handle_connection","","Handles an incomming connection. I.e., another peer that …",7,[[["tcpstream",3],["bool",15],["ttlmap",3],["peermap",3],["peerdata",3],["ttlmap",3],["socketaddr",4],["clienttxchannel",6]]]],[11,"say","","Convienence function that broadcasts a say message. This …",7,[[["u64",15],["string",3],["peermap",3]]]],[11,"next_sequence_number","","Conienence function that gets the next sequence number …",7,[[],["u64",15]]],[11,"start","","Starts the server. This is primarily three steps:",7,[[["u64",15],["str",15]]]],[11,"client_message_handler","","This method handles messages that come in from the …",7,[[["serverrxchannel",6],["peermap",3]]]],[11,"parse_register_response","","",7,[[["bing2bingframe",4]],[["vec",3],["result",4],["bing2bingerror",6]]]],[11,"connect_to_peer","","",7,[[["string",3],["peermap",3]]]],[5,"start_announce","","<em>POINTS AVAILABLE</em> Right now, this method will announce the …",null,[[["sequencenumbergenerator",3],["string",3],["u64",15],["connectioncounter",3],["peermap",3]]]],[0,"client","libb2b","",null,null],[3,"Client","libb2b::client","A <code>Client</code> is the way that a user (i.e., a user of our …",null,null],[12,"shared","","",8,null],[11,"new","","",8,[[["clientrxchannel",6],["string",3],["servertxchannel",6]],["client",3]]],[11,"say","","",8,[[["string",3]]]],[11,"next_message","","",8,[[]]],[3,"Shared","","",null,null],[12,"name","","",9,null],[12,"server_tx","","",9,null],[12,"rx","","",9,null],[11,"new","","",9,[[["clientrxchannel",6],["string",3],["servertxchannel",6]]]],[0,"tracker","libb2b","",null,null],[3,"Tracker","libb2b::tracker","",null,null],[12,"listener","","",10,null],[11,"new","","",10,[[["str",15]]]],[11,"listen","","",10,[[]]],[11,"process_frame","","",10,[[["bing2bingframe",4]],[["bing2bingerror",6],["result",4],["register",3]]]],[11,"handle_connection","","",10,[[["tcpstream",3],["socketaddr",4],["ttlmap",3]]]],[0,"parse","libb2b","",null,null],[3,"Parse","libb2b::parse","This struct helps in the construction of commands by …",null,null],[12,"parts","","Array frame iterator",11,null],[4,"ParseError","","",null,null],[13,"EndOfStream","","Extracting a value failed because the frame was fully …",12,null],[13,"Other","","Any other error.",12,null],[11,"new","","",11,[[["bing2bingframe",4]],[["result",4],["parse",3],["parseerror",4]]]],[11,"next","","Returns the next entry. Since [Bing2BingFrame::Array]s …",11,[[],[["result",4],["bing2bingframe",4],["parseerror",4]]]],[11,"next_float","","Returns the next f64; if the next frame is <em>not</em> a Float …",11,[[],[["f64",15],["parseerror",4],["result",4]]]],[11,"next_text","","Returns the next Text frame; if the next frame is <em>not</em> a …",11,[[],[["parseerror",4],["result",4],["string",3]]]],[11,"next_string","","Returns the next Text entry",11,[[],[["parseerror",4],["result",4],["string",3]]]],[11,"next_bytes","","",11,[[],[["bytes",3],["parseerror",4],["result",4]]]],[11,"next_number","","Returns the next Number frame; if the next frame is <em>not</em> a …",11,[[],[["result",4],["parseerror",4],["u64",15]]]],[11,"next_array","","",11,[[],[["vec",3],["result",4],["parseerror",4]]]],[11,"finish","","Convienence method to validate that there are no …",11,[[],[["parseerror",4],["result",4]]]],[0,"cmd","libb2b","",null,null],[0,"ping","libb2b::cmd","",null,null],[3,"Ping","libb2b::cmd::ping","A simple command that let’s peers test latency between …",null,null],[12,"source","","",13,null],[12,"sequence_number","","",13,null],[11,"new","","",13,[[["string",3],["u64",15]]]],[11,"parse_frames","","Returns a parsed Ping command.",13,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","",13,[[["connection",3]]]],[11,"into_frame","","Turns this <code>Ping</code> into a [Bing2BingFrame].",13,[[],["bing2bingframe",4]]],[0,"say","libb2b::cmd","",null,null],[3,"Say","libb2b::cmd::say","This command allows for propagation of normal chat …",null,null],[12,"source","","",14,null],[12,"sequence_number","","",14,null],[12,"message","","",14,null],[11,"new","","",14,[[["str",15],["string",3],["u64",15]]]],[11,"parse_frames","","",14,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","",14,[[["peermap",3]]]],[11,"into_frame","","Turns this <code>Say</code> into a [Bing2BingFrame].",14,[[],["bing2bingframe",4]]],[0,"register","libb2b::cmd","",null,null],[3,"Register","libb2b::cmd::register","This command is sent to the tracker to help a peer …",null,null],[12,"peer_name","","",15,null],[12,"sequence_number","","",15,null],[12,"ip_address","","",15,null],[12,"port","","",15,null],[11,"new","","",15,[[["u64",15],["str",15]]]],[11,"peer_name","","",15,[[],["string",3]]],[11,"parse_frames","","",15,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","",15,[[["ttlmap",3],["connection",3]]]],[11,"into_frame","","Turns this <code>Register</code> into a [Bing2BingFrame].",15,[[],["bing2bingframe",4]]],[0,"announce","libb2b::cmd","",null,null],[3,"Announce","libb2b::cmd::announce","The <code>Announce</code> command is propagated through the network to …",null,null],[12,"source","","",16,null],[12,"sequence_number","","",16,null],[12,"ip_address","","",16,null],[12,"port","","",16,null],[12,"available_incoming","","",16,null],[12,"city","","",16,null],[12,"lat","","",16,null],[12,"lng","","",16,null],[12,"peers","","",16,null],[11,"new","","",16,[[["f64",15],["vec",3],["string",3],["u64",15]]]],[11,"parse_frames","","",16,[[["parse",3],["string",3],["u64",15]],[["bing2bingerror",6],["result",4]]]],[11,"parse_peer_info_frames","","",16,[[["parse",3]],[["bing2bingerror",6],["vec",3],["result",4]]]],[11,"apply","","",16,[[["ttlmap",3],["peermap",3]]]],[11,"into_frame","","Turns this <code>Announce</code> into a [Bing2BingFrame].",16,[[],["bing2bingframe",4]]],[0,"whisper","libb2b::cmd","",null,null],[3,"Whisper","libb2b::cmd::whisper","This command allows for direct messaging between two …",null,null],[12,"source","","",17,null],[12,"sequence_number","","",17,null],[12,"destination","","",17,null],[12,"message","","",17,null],[11,"new","","",17,[[["string",3],["u64",15],["str",15]]]],[11,"parse_frames","","",17,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","Currently just broadcasts the message back out to …",17,[[["peermap",3]]]],[11,"into_frame","","",17,[[],["bing2bingframe",4]]],[0,"broadcast","libb2b::cmd","",null,null],[3,"Broadcast","libb2b::cmd::broadcast","The <code>Broadcast</code> command delivers data (a […",null,null],[12,"source","","",18,null],[12,"sequence_number","","",18,null],[12,"data","","",18,null],[11,"parse_frames","","",18,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","Forwards this command out to all connected peers.",18,[[["peermap",3]]]],[11,"into_frame","","Turns this <code>Broadcast</code> into a [Bing2BingFrame].",18,[[],["bing2bingframe",4]]],[0,"deliver","libb2b::cmd","",null,null],[3,"Deliver","libb2b::cmd::deliver","<code>Deliver</code> data [Bing2BingFrame::Bulk] to a specific …",null,null],[12,"source","","",19,null],[12,"sequence_number","","",19,null],[12,"destination","","",19,null],[12,"data","","",19,null],[11,"parse_frames","","",19,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","Forward the data on to the next peer in the path.",19,[[["peermap",3]]]],[11,"into_frame","","Turns this <code>Deliver</code> into a [Bing2BingFrame].",19,[[],["bing2bingframe",4]]],[0,"extension","libb2b::cmd","",null,null],[3,"Extension","libb2b::cmd::extension","This command serves as a mechanism to enable extensions …",null,null],[12,"source","","",20,null],[12,"sequence_number","","",20,null],[12,"extension_id","","",20,null],[12,"payload","","",20,null],[11,"new","","",20,[[["bing2bingframe",4],["string",3],["u64",15]]]],[11,"parse_frames","","",20,[[["parse",3]],[["bing2bingerror",6],["result",4]]]],[11,"apply","","Currently just broadcasts the message back out to …",20,[[["peermap",3]]]],[11,"into_frame","","Turns this <code>Extension</code> into a [Bing2BingFrame].",20,[[],["bing2bingframe",4]]],[3,"Ping","libb2b::cmd","A simple command that let’s peers test latency between …",null,null],[12,"source","","",13,null],[12,"sequence_number","","",13,null],[3,"Say","","This command allows for propagation of normal chat …",null,null],[12,"source","","",14,null],[12,"sequence_number","","",14,null],[12,"message","","",14,null],[3,"Register","","This command is sent to the tracker to help a peer …",null,null],[12,"peer_name","","",15,null],[12,"sequence_number","","",15,null],[12,"ip_address","","",15,null],[12,"port","","",15,null],[3,"Announce","","The <code>Announce</code> command is propagated through the network to …",null,null],[12,"source","","",16,null],[12,"sequence_number","","",16,null],[12,"ip_address","","",16,null],[12,"port","","",16,null],[12,"available_incoming","","",16,null],[12,"city","","",16,null],[12,"lat","","",16,null],[12,"lng","","",16,null],[12,"peers","","",16,null],[3,"Whisper","","This command allows for direct messaging between two …",null,null],[12,"source","","",17,null],[12,"sequence_number","","",17,null],[12,"destination","","",17,null],[12,"message","","",17,null],[3,"Broadcast","","The <code>Broadcast</code> command delivers data (a […",null,null],[12,"source","","",18,null],[12,"sequence_number","","",18,null],[12,"data","","",18,null],[3,"Deliver","","<code>Deliver</code> data [Bing2BingFrame::Bulk] to a specific …",null,null],[12,"source","","",19,null],[12,"sequence_number","","",19,null],[12,"destination","","",19,null],[12,"data","","",19,null],[3,"Extension","","This command serves as a mechanism to enable extensions …",null,null],[12,"source","","",20,null],[12,"sequence_number","","",20,null],[12,"extension_id","","",20,null],[12,"payload","","",20,null],[4,"Bing2BingCommand","","",null,null],[13,"Broadcast","","",21,null],[13,"Deliver","","",21,null],[13,"Register","","",21,null],[13,"Announce","","",21,null],[13,"Whisper","","",21,null],[13,"Unknown","","",21,null],[13,"Ping","","",21,null],[13,"Say","","",21,null],[13,"Extension","","",21,null],[11,"from_frame","","",21,[[["bing2bingframe",4]],[["bing2bingcommand",4],["result",4],["bing2bingerror",6]]]],[11,"into_frame","","",21,[[["bing2bingcommand",4]],["bing2bingframe",4]]],[11,"check_duplicate","","Checks to make sure that this <code>Bing2BingCommand</code> hasn’t …",21,[[["ttlmap",3]],["bool",15]]],[11,"set_processed","","",21,[[["ttlmap",3]]]],[0,"util","libb2b","",null,null],[0,"ttl_map","libb2b::util","",null,null],[3,"TtlMap","libb2b::util::ttl_map","This is a <code>HashMap</code> like structure that uses [String]s as …",null,null],[12,"shared","","",22,null],[3,"Shared","","",null,null],[12,"state","","",23,null],[12,"background_task","","",23,null],[3,"State","","",null,null],[12,"entries","","",24,null],[12,"expirations","","",24,null],[12,"next_id","","",24,null],[3,"Entry","","",null,null],[12,"id","","Unique id for the entry",25,null],[12,"data","","Stored data",25,null],[12,"expires_at","","",25,null],[11,"new","","",22,[[]]],[11,"get","","",22,[[["str",15]],["option",4]]],[11,"remove","","",22,[[["str",15]],["option",4]]],[11,"set","","",22,[[["duration",3],["string",3],["option",4]]]],[11,"random_keys_vals","","Gets a <code>n</code> random key/values from this <code>TtlMap</code>.",22,[[["usize",15]],["vec",3]]],[11,"purge_expired_keys","","Purge all expired keys and return the [Instant] that the …",23,[[],[["instant",3],["option",4]]]],[11,"next_expiration","","",24,[[],[["instant",3],["option",4]]]],[5,"purge_expired_tasks","","",null,[[["shared",3],["arc",3]]]],[0,"counters","libb2b::util","",null,null],[3,"SequenceNumberGenerator","libb2b::util::counters","",null,null],[12,"shared","","",26,null],[11,"new","","",26,[[["u64",15]]]],[11,"next","","",26,[[],["u64",15]]],[3,"State","","",null,null],[12,"current_number","","",27,null],[3,"ConnectionCounter","","",null,null],[12,"shared","","",28,null],[11,"new","","",28,[[["u64",15]]]],[11,"dec","","",28,[[]]],[11,"get","","",28,[[],["u64",15]]],[11,"inc","","",28,[[]]],[3,"Connection","libb2b","A <code>Connection</code> handles reading/writing to the network.",null,null],[12,"frames","","",3,null],[3,"Server","","The “server” side of the P2P chat application. A …",null,null],[12,"listener","","",7,null],[12,"sequence_numbers","","",7,null],[12,"name","","",7,null],[12,"ip_address","","",7,null],[12,"port","","",7,null],[12,"num_incoming_conns","","",7,null],[12,"client_tx","","",7,null],[12,"rx","","",7,null],[3,"Client","","A <code>Client</code> is the way that a user (i.e., a user of our …",null,null],[12,"shared","","",8,null],[6,"Bing2BingError","","",null,null],[6,"ClientTxChannel","","",null,null],[6,"ClientRxChannel","","",null,null],[6,"ServerTxChannel","","",null,null],[6,"ServerRxChannel","","",null,null],[6,"PeerTxChannel","","",null,null],[6,"PeerRxChannel","","",null,null],[4,"ClientServerMessage","","",null,null],[13,"Say","","",29,null],[4,"PeerControlMessage","","",null,null],[13,"ShutDown","","",30,null],[13,"Frame","","",30,null],[6,"Framed","","",null,null],[6,"BingLengthDelimitedCodec","","",null,null],[4,"Bing2BingFrame","","",null,null],[13,"Text","","A string",31,null],[13,"Error","","An error type",31,null],[13,"Number","","A numeric type",31,null],[13,"Bulk","","Raw bytes",31,null],[13,"Bool","","true/false",31,null],[13,"Null","","Null value",31,null],[13,"Array","","An array of frames",31,null],[13,"Float","","A 64 bit float",31,null],[5,"init","","Initializes a new “peer.” I.e., creates a [Client] …",null,[[["u16",15],["str",15]]]],[11,"from","libb2b::peer","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","libb2b::connection","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","libb2b::peer_map","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","libb2b::server","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","libb2b::client","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","libb2b::tracker","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","libb2b::parse","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","libb2b::cmd::ping","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","libb2b::cmd::say","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","libb2b::cmd::register","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","libb2b::cmd::announce","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","libb2b::cmd::whisper","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","libb2b::cmd::broadcast","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","libb2b::cmd::deliver","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","libb2b::cmd::extension","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","libb2b::cmd","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","libb2b::util::ttl_map","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","libb2b::util::counters","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","libb2b","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","libb2b::parse","",12,[[["string",3]]]],[11,"from","","",12,[[["str",15]],["parseerror",4]]],[11,"clone","libb2b::peer","",1,[[],["peerinfo",3]]],[11,"clone","","",2,[[],["peerdata",3]]],[11,"clone","libb2b::peer_map","",4,[[],["peermap",3]]],[11,"clone","libb2b::client","",8,[[],["client",3]]],[11,"clone","libb2b::cmd::say","",14,[[],["say",3]]],[11,"clone","libb2b::cmd::whisper","",17,[[],["whisper",3]]],[11,"clone","libb2b::cmd::broadcast","",18,[[],["broadcast",3]]],[11,"clone","libb2b::cmd::deliver","",19,[[],["deliver",3]]],[11,"clone","libb2b::cmd::extension","",20,[[],["extension",3]]],[11,"clone","libb2b::util::ttl_map","",22,[[],["ttlmap",3]]],[11,"clone","libb2b::util::counters","",26,[[],["sequencenumbergenerator",3]]],[11,"clone","","",28,[[],["connectioncounter",3]]],[11,"clone","libb2b","",31,[[],["bing2bingframe",4]]],[11,"default","libb2b::peer_map","",4,[[]]],[11,"cmp","libb2b::peer","",1,[[["peerinfo",3]],["ordering",4]]],[11,"eq","","",1,[[["peerinfo",3]],["bool",15]]],[11,"ne","","",1,[[["peerinfo",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["peerinfo",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::connection","",3,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::peer_map","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::server","",7,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::client","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::tracker","",10,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::parse","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::ping","",13,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::say","",14,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::register","",15,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::announce","",16,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::whisper","",17,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::broadcast","",18,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::deliver","",19,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd::extension","",20,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::cmd","",21,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::util::ttl_map","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::util::counters","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","libb2b::parse","",12,[[["formatter",3]],["result",6]]],[11,"hash","libb2b::peer","",1,[[]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","libb2b","",31,[[],["result",4]]],[11,"deserialize","libb2b::peer","",1,[[],["result",4]]],[11,"deserialize","libb2b","",31,[[],["result",4]]]],"p":[[3,"Peer"],[3,"PeerInfo"],[3,"PeerData"],[3,"Connection"],[3,"PeerMap"],[3,"Shared"],[3,"State"],[3,"Server"],[3,"Client"],[3,"Shared"],[3,"Tracker"],[3,"Parse"],[4,"ParseError"],[3,"Ping"],[3,"Say"],[3,"Register"],[3,"Announce"],[3,"Whisper"],[3,"Broadcast"],[3,"Deliver"],[3,"Extension"],[4,"Bing2BingCommand"],[3,"TtlMap"],[3,"Shared"],[3,"State"],[3,"Entry"],[3,"SequenceNumberGenerator"],[3,"State"],[3,"ConnectionCounter"],[4,"ClientServerMessage"],[4,"PeerControlMessage"],[4,"Bing2BingFrame"]]},\
"simple_ui":{"doc":"","i":[[6,"UiClientTxChannel","simple_ui","",null,null],[6,"UiClientRxChannel","","",null,null],[3,"Cli","","",null,null],[12,"name","","What name should this peer have?",0,null],[12,"ip_address","","server ip address (0.0.0.0 should be any ip the server …",0,null],[12,"port","","server port address",0,null],[12,"tracker_ip_address","","tracker ip address",0,null],[12,"tracker_port","","tracker port",0,null],[12,"max_connections","","maximum number of incomming connections that will be …",0,null],[5,"main","","",null,[[],[["result",4],["bing2bingerror",6]]]],[4,"UiClientMessage","","",null,null],[13,"Say","","",1,null],[5,"start_peer","","",null,[[["unboundedreceiver",3],["uiclientmessage",4],["u16",15],["u64",15],["client",3],["server",3],["string",3]]]],[5,"start_ui","","",null,[[["app",3],["unboundedsender",3],["uiclientmessage",4]]]],[3,"App","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",0,[[],["cli",3]]],[11,"clone","","",1,[[],["uiclientmessage",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[],["bool",15]]]],"p":[[3,"Cli"],[4,"UiClientMessage"],[3,"App"]]},\
"tracker_test":{"doc":"","i":[[3,"Cli","tracker_test","",null,null],[12,"ip_address","","ip address to bind to (0.0.0.0 should be any ip the …",0,null],[12,"port","","The port the tracker should listen on.",0,null],[5,"main","","",null,[[],[["bing2bingerror",6],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["cli",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[],["bool",15]]]],"p":[[3,"Cli"]]}\
}');
initSearch(searchIndex);